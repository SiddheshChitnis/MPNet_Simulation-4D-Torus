import peersim.core.Network;

import peersim.core.Node;

import peersim.core.CommonState;

import peersim.edsim.EDSimulator;



import java.io.*;



public class Library 

{

	public static long netSpeed;

	public static long latency;

	public static BufferedWriter bw;

	

	public static long numOperaFinished;

	public static long numAllOpera;

	public static boolean allowParallel;

	

	public static long numMsg;

	public static int dimSize;

	

	public static int getDimSize(int num)

	{

		return (int)Math.sqrt(Math.sqrt((double)(num)));

	}

	

	public static void initLib(int numServer)

	{

		Library.netSpeed = 10L * 1024L * 1024L * 1024L;

		Library.latency = 100L;

}

	public static long commOverhead(long msgSize)

	{

		return msgSize / Library.netSpeed + Library.latency;

	}

	public static int[] onetoThreeMapping(int index, int dimSize)

	{

		int[] coordinate = new int[4];

		coordinate[0] = index / (dimSize * dimSize* dimSize);

		coordinate[1] = (index - coordinate[0] * (dimSize * dimSize* dimSize)) / (dimSize*dimSize);

		coordinate[2] = (index - coordinate[0] * (dimSize * dimSize* dimSize) - coordinate[1] * (dimSize * dimSize)) / dimSize;

		coordinate[3] = index % dimSize;

		return coordinate;

	}

	

	public static int threetoOneMapping(int[] coordinate, int dimSize)

	{

		return coordinate[0] * dimSize* dimSize * dimSize + coordinate[1] * dimSize* dimSize + coordinate[2]* dimSize + coordinate[3]* dimSize;

	}

}
